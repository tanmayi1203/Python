class Employee:
    def __init__(self,eid,name,salary,city):
        self.eid=eid
        self.name=name
        self.salary=salary
        self.city=city

class EmployeeManagementSystem:
    def __init__(self):
        self.employees=[]

    def menu(self):
        print("Employee Management System")
        print('1. Add employee')
        print('2. View all employees')
        print('3. Search employee by name or city')
        print('4. Edit employee')
        print('5. Delete employee')
        print('6. Exit')

    def add_employee(self):
        eid=int(input("Enter the eid: "))
        name=input("Enter the name of the employee: ")
        salary=float(input("Enter the salary of the employee: "))
        city=input("Enter the city of the employee: ")
        emp=Employee(eid,name,salary,city)
        self.employees.append(emp)
        print('Employee added successfully')

    def view_all_employees(self):
        for emp in self.employees:
            print(f"eid:{emp.eid},name:{emp.name},salary:{emp.salary},city:{emp.city}")

    def search_employee(self):
        print('1. Search by name')
        print('2. Search by city')
        choice=int(input('Enter your choice among 1 and 2 : '))
        if choice==1:
            emp_name=input('Enter the name to search : ')
            found=False
            for emp in self.employees:
                if emp_name==emp.name:
                    print(f"eid:{emp.eid},name:{emp.name},salary:{emp.salary},city:{emp.city}")
                    found=True
            if found==False:
                print('No employee with that name.')
        elif choice==2:
            emp_city=input('Enter the city to search : ')
            found=False
            for emp in self.employees:
                if emp_city==emp.city:
                    print(f"eid:{emp.eid},name:{emp.name},salary:{emp.salary},city:{emp.city}")
                    found=True
            if found==False:
                print('No employee in that city.')
        else:
            print('Invalid choice..Choose either 1 or 2.')

    def edit_employee(self):
        id=int(input("Enter eid of the employee who details need to be updated : "))
        for emp in self.employees:
            if emp.eid==id:
                emp.name=input("Enter the new name if it needs to be updated : ") or emp.name
                emp.salary=input("Enter the new salary if it needs to be updated : ") or emp.salary
                emp.city=input("Enter the new city if it needs to be updated : ") or emp.city
                print('Details updated.')
                return
        print('Employee not found.')

    def delete_employee(self):
        id=int(input('Enter the eid of the employee who needs to be deleted : '))
        for emp in self.employees:
            if emp.eid==id:
                self.employees.remove(emp)
                print('Employee with eid=%d has been deleted'%(id))
                return
        print('Employee not found.')

    def main(self):
        while True:
            self.menu()
            choice = int(input("Enter your choice: "))
            if choice==1:
                self.add_employee()
            elif choice==2:
                self.view_all_employees()
            elif choice==3:
                self.search_employee()
            elif choice==4:
                self.edit_employee()
            elif choice==5:
                self.delete_employee()
            elif choice==6:
                break
            else:
                print("Invalid choice..Choose between 1 and 6.")

if __name__ == "__main__":
    sys=EmployeeManagementSystem()
    sys.main()